<launch>
  <arg name="paused" default="false"/>
  <arg name="use_sim_time" default="true"/>
  <arg name="gui" default="true"/>
  <arg name="headless" default="false"/>
  <arg name="debug" default="false"/>
  <arg name="world_file" default ="$(find xingtian_dynamics)/world/terrain_world/terrain_world.world" />

  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    
    <arg name="debug" value="$(arg debug)"/>      <!--设置debug模式-->
    <arg name="gui" value="$(arg gui)"/>
    <arg name="paused" value="$(arg paused)"/>
    <arg name="use_sim_time" value="$(arg use_sim_time)"/>
    <arg name="headless" value="$(arg headless)"/>
    <arg name="world_name" value="$(arg world_file)"/>    <!--开头必须是world_name-->
  </include>
  
  <param name="robot_description" textfile="$(find xingtian_dynamics)/urdf/xingtian_urdf.xacro" />
  <node
    name="joint_state_publisher"
    pkg="joint_state_publisher"
    type="joint_state_publisher" />
  <node
    name="robot_state_publisher"
    pkg="robot_state_publisher"
    type="robot_state_publisher" 
    respawn = "false" output = "screen"/>
  <remap from ="/joint_states" to ="/xingtian_dynamics/joint_states"/>
  <node
    name="tf_footprint_base"
    pkg="tf"
    type="static_transform_publisher"
    args="0 0 1 0 0 0 base_link base_footprint 0" /> 
  <node
    name="spawn_model"
    pkg="gazebo_ros"
    respawn = "false"
    type="spawn_model"
    args="-file $(find xingtian_dynamics)/urdf/xingtian_urdf.xacro -urdf -model xingtian -x 0 -y 0 -z 0.3 -Y 0"
    output="screen" />
  <node
    name="fake_joint_calibration"
    pkg="rostopic"
    type="rostopic"
    args="pub /calibrated std_msgs/Bool true" />

  <rosparam file="$(find xingtian_dynamics)/gazebo_ros_control/pid_gains.yaml" command="load"/>
  <node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false"
    output="screen" ns="/xingtian" args = "
    LF_wheel_controller 
    LF_knee_controller 
    LF_hip_controller 
    RF_wheel_controller 
    RF_knee_controller
    RF_hip_controller
    LR_wheel_controller
    LR_knee_controller
    LR_hip_controller
    RR_wheel_controller
    RR_knee_controller
    RR_hip_controller
    joint_state_controller"/> 
</launch>